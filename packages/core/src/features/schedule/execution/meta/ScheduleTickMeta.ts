/*
 * MIT License
 *
 * Copyright (c) 2023 Amgelo563
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import { Collection } from '@discordjs/collection';

import type { Identifiable } from '../../../../identity/Identifiable.js';
import type { Identifier } from '../../../../identity/Identifier.js';
import type { MetaCollection } from '../../../../meta/MetaCollection.js';
import type { NyxBot } from '../../../../bot/NyxBot.js';
import type { Schedule } from '../../schedule/Schedule.js';

/** An object that saves metadata about a schedule tick. */
export class ScheduleTickMeta
  extends Collection<Identifier, unknown>
  implements MetaCollection, Identifiable
{
  protected readonly id: Identifier;

  protected readonly bot: NyxBot;

  protected readonly createdAt: number = Date.now();

  constructor(bot: NyxBot, id: Identifier) {
    super();
    this.bot = bot;
    this.id = id;
  }

  /** Creates an ScheduleTickMeta using the given arguments, and an autogenerated ID. */
  public static fromSchedule(
    schedule: Schedule,
    bot: NyxBot,
  ): ScheduleTickMeta {
    const scheduleId = String(schedule.getId());
    const id = Symbol(`Schedule '${scheduleId}' @${Date.now()}`);
    return new ScheduleTickMeta(bot, id);
  }

  /** Returns the bot that called this schedule. */
  public getBot(): NyxBot {
    return this.bot;
  }

  /** Returns the identifier of this schedule tick. */
  public getId(): Identifier {
    return this.id;
  }

  /** Returns the time when this schedule was ticked. */
  public getCreatedAt(): number {
    return this.createdAt;
  }
}
